{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-03T14:51:14.131Z",
    "end": "2024-03-03T14:51:15.186Z",
    "duration": 1055,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0a85491f-6c1a-423f-a330-482f3ee741f8",
      "title": "",
      "fullFile": "cypress/e2e/cats.cy.ts",
      "file": "cypress/e2e/cats.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd4785c0-abce-412d-b84b-f6f3597a661b",
          "title": "cats api tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "abyssinian data should be correct",
              "fullTitle": "cats api tests abyssinian data should be correct",
              "timedOut": null,
              "duration": 1032,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var endpoint = \"https://api.api-ninjas.com/v1/cats\";\nvar params = {\n    name: \"abyssinian\",\n};\nvar headers = {\n    \"X-Api-Key\": Cypress.env().token,\n};\ncy.api({\n    method: \"GET\",\n    url: endpoint,\n    qs: params,\n    headers: headers,\n}).then(function (response) {\n    expect(response.status).to.eq(200);\n    if (Array.isArray(response.body) && response.body.length > 0) {\n        // checking type here\n        var cat = response.body[0];\n        expect(cat.name).to.eq(\"Abyssinian\");\n        expect(cat.length).to.eq(\"12 to 16 inches\");\n        expect(cat.origin).to.eq(\"Southeast Asia\");\n        expect(cat.image_link).to.eq(\"https://api-ninjas.com/images/cats/abyssinian.jpg\");\n        expect(cat.family_friendly).to.eq(3);\n        expect(cat.shedding).to.eq(3);\n        expect(cat.general_health).to.eq(2);\n        expect(cat.playfulness).to.eq(5);\n        expect(cat.children_friendly).to.eq(5);\n        expect(cat.grooming).to.eq(3);\n        expect(cat.intelligence).to.eq(5);\n        expect(cat.other_pets_friendly).to.eq(5);\n        expect(cat.min_weight).to.eq(6);\n        expect(cat.max_weight).to.eq(10);\n        expect(cat.min_life_expectancy).to.eq(9);\n        expect(cat.max_life_expectancy).to.eq(15);\n    }\n    else {\n        throw new Error(\"Response is not in the expected format.\");\n    }\n});",
              "err": {},
              "uuid": "1436293e-d193-4538-9499-f1bc6def0247",
              "parentUUID": "bd4785c0-abce-412d-b84b-f6f3597a661b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1436293e-d193-4538-9499-f1bc6def0247"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}